#include <iostream>
#include <fstream>
#include <cmath>
using namespace std;

int main()
{
	setlocale(LC_ALL, "russian");
	double** a, * y, s, c, helpA, maxValue;
	bool f = false;
	int m, n, i, j, k, maxIndex;
	ifstream fin("3.txt");
	fin >> n;
	m = n + 1;
	a = new double* [n];
	y = new double[n];
	for (int i = 1; i <= n; i++) 
	{
		a[i] = new double[m];
		for (int j = 1; j <= m; j++)
			fin >> a[i][j];
	}
	fin.close();
	//Вывод Матрицы
	cout << "Введённая матрица: " << endl;
	for (i = 1; i <= n; i++)
	{
		for (j = 1; j <= m; j++)
		{
			if (j == m)
			{
				cout << "|";
			}
			cout.width(5); cout << a[i][j] << " ";
		}
		cout << endl;
	}
	cout << endl;

	// прямой ход метода Гаусса
	for (i = 1; i <= n; i++)
	{
		// выбор ведущего элемента столбца
		maxValue = a[i][i];
		maxIndex = i;
		for (k = i + 1; k <= n; k++)
		{
			if (abs(maxValue) < abs(a[k][i]))
			{
				maxValue = a[k][i];
				maxIndex = k;
			}
			if (maxValue == 0)
			{
				exit(0);
			}
			// перестановка столбцов
			if (i != maxIndex)
			{
				for (j = 1; j <= m; j++)
				{
					helpA = a[i][j];
					a[i][j] = a[k][j];
					a[k][j] = helpA;
				}
			}
		}
		// приведение к треугольному виду
		for (j = i + 1; j <= n; j++)
		{
			if (abs(a[i][i]) > pow(10, -9))
			{
				c = -(a[j][i] / a[i][i]);
				a[j][m] = a[j][m] + c * a[i][m];
				for (k = 1; k <= n; k++)
				{
					a[j][k] = a[j][k] + c * a[i][k];
				}
			}
			else
			{
				cout << "Деление на маленькое число" << endl;
				f = true;
				break;
			}
		}
	}
	// обратный ход метода Гаусса
	if (abs(a[n][n]) > pow(10, -9))
	{
		y[n] = a[n][m] / a[n][n];
		for (i = n; i >= 1; i--)
		{
			s = 0;
			for (j = n; j > i; j--)
			{
				s = s + a[i][j] * y[j];
			}
			y[i] = (a[i][m] - s) / a[i][i];
		}
	}
	else
	{
		cout << "Деление на маленькое число" << endl;
		f = true;
	}

	// вывод решений
	if (f != true)
	{
		for (i = 1; i <= n; i++)
		{
			if (y[i] == 0)
				y[i] = abs(y[i]);
			cout << "y[" << i << "]=" << y[i] << endl;
		}
	}
	ofstream fout("out1.txt");
	for (i = 1; i <= n; i++)
		fout << y[i];
	fout.close();
}
