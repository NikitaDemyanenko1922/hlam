#include <iostream>
#define NMAX 100
#include <fstream>
using namespace std;

int main()
{
	setlocale(LC_ALL, "rus");
	float s, a[NMAX][NMAX], f[NMAX], c[NMAX], y[NMAX], h[NMAX], r[NMAX], F[NMAX], A[NMAX][NMAX], helperB, helperA, maxValue;
	int m, n, i, j, k, l, maxIndex, g, d;
	//ручной ввод матрицы 
	/*cout << "количество неизвестных:  ";
	cin >> n;
	m = n + 1;
	for (i = 1; i <= n; i++)
	{

		for (j = 1; j <= m; j++)
		{
			if (j != m)
			{
				cout << "a[" << i << "][" << j << "] = ";
				cin >> a[i][j];
			}
			else
			{
				cout << "b[" << i << "][" << j << "] = ";
				cin >> a[i][j];
			}
		}
	}*/
	ifstream fin("1.txt"); //открываем файл
    fin >> n; //читаем размер
    m = n + 1;
    for (int i = 1; i <= n; i++) //массива
    {
        for (int j = 1; j <= m; j++) //чтение элементов
            fin >> a[i][j];
    }
    fin.close(); //закрываем файл
    //Вывод Матрицы
    cout << "Введённая матрица: " << endl;
    for (i = 1; i <= n; i++)
    {
        for (j = 1; j <= m; j++)
        {
            if (j == m)
            {
                cout << "|";
            }
            cout << a[i][j] << " ";
        }
        cout << endl;
    }
    cout << endl;

	// создание дубликата исходной матрицы
	for (i = 1; i <= n; i++)
	{
		for (j = 1; j <= m; j++)
		{
			A[i][j] = a[i][j];
		}
	}



	// прямой ход метода Гаусса
	for (i = 1; i <= n; i++)
	{
		// выбор ведущего элемента столбца

		maxValue = a[i][i];
		maxIndex = i;
		for (k = i + 1; k <= n; k++)
		{
			if (fabs(maxValue) < fabs(a[k][i]))
			{
				maxValue = a[k][i];
				maxIndex = k;
			}
			if (maxValue == 0)
			{
				exit(0);
			}
			// перестановка столбцов
			if (i != maxIndex)
			{
				helperB = a[i][m];
				a[i][m] = a[k][m];
				a[k][m] = helperB;
				for (j = 1; j <= n; j++)
				{
					helperA = a[i][j];
					a[i][j] = a[k][j];
					a[k][j] = helperA;
				}
			}
		}

		// приведение к треугольному виду
		for (j = i + 1; j <= n; j++)
		{

			c[j] = -(a[j][i] / a[i][i]);
			a[j][m] = a[j][m] + c[j] * a[i][m];
			for (k = 1; k <= n; k++)
			{
				a[j][k] = a[j][k] + c[j] * a[i][k];
			}
		}
	}
	// обратный ход метода Гаусса
	y[n] = a[n][m] / a[n][n];
	for (i = n; i >= 1; i--)
	{
		s = 0;
		for (j = n; j > i; j--)
		{
			s = s + a[i][j] * y[j];
		}
		y[i] = (a[i][m] - s) / a[i][i];
	}

	// вывод решений
	for (i = 1; i <= n; i++)
	{
		cout << "y[" << i << "]=" << y[i] << "\n";
	}
}
